name: Hello
on:
  workflow_dispatch:

jobs:
  matrix-jobs:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ matrix.source }}
    strategy:
      matrix:
        target: [armv7-unknown-linux-musleabihf, aarch64-unknown-linux-musl]
        source: [logger, raspberry-pi/ds18b20]
        include:
          - target: x86_64-unknown-linux-musl
            source: logger
            config: "services co2db.json-example installer.sh"
          - config: "services co2db.json-example installer.sh"
            source: logger
          - config: "ds18b20_pub.service ds18b20.json-example installer.sh"
            source: raspberry-pi/ds18b20

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Extract crate information
        shell: bash
        run: |
          echo "PACKAGE_NAME=$(sed -n 's/^name = "\(.*\)"/\1/p' Cargo.toml | head -n1)" >> $GITHUB_ENV
      - name: Build archive
        shell: bash
        run: |
          pwd
          ls
          dirname="${{ env.PACKAGE_NAME }}-test-${{ matrix.target }}"
          echo "${{ matrix.config }}" > ${{ github.workspace }}/${dirname}.txt
          ls
          echo "ASSET=${dirname}.txt" >> $GITHUB_ENV
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ASSET }}
          path: "${{ github.workspace }}/${{ env.ASSET }}"

  finalize:
    needs: [matrix-jobs]
    runs-on: ubuntu-latest
    steps:
      - name: Check finalize environment
        shell: bash
        run: |
          pwd
          ls
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Results of download
        shell: bash
        run: |
          pwd
          ls
