name: Hello
on:
  workflow_dispatch:

jobs:
  print-matrix:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ matrix.source }}
    strategy:
      matrix:
        target: [armv7-unknown-linux-musleabihf, aarch64-unknown-linux-musl]
        source: [logger, raspberry-pi/ds18b20]
        include:
          - target: x86_64-unknown-linux-musl
            source: logger
          - config: "services co2db.json-example installer.sh"
            source: logger
          - config: "ds18b20_pub.service ds18b20.json-example installer.sh"
            source: raspberry-pi/ds18b20

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Extract crate information
        shell: bash
        run: |
          echo "PACKAGE_NAME=$(sed -n 's/^name = "\(.*\)"/\1/p' Cargo.toml | head -n1)" >> $GITHUB_ENV
      - name: Install Rust toolchain
        run: |
          rustup target add ${{ matrix.target }}
          cargo install cross
      - name: Build archive
        shell: bash
        run: |
          dirname="${{ env.PACKAGE_NAME }}-hello-${{ matrix.target }}"
          mkdir "$dirname"
          bins=$(grep -A1 '\[\[bin\]\]' Cargo.toml | sed -n 's/^name = "\(.*\)"/\1/p')
          targetdir="./target/${{ matrix.target }}/release/"
          for b in $bins; do mv "$targetdir"/$b "$dirname"; done
          cp -a ${{ matrix.config }} "$dirname"
          tar -czf "../${dirname}.tar.gz" "$dirname"
          echo "ASSET=${dirname}.tar.gz" >> $GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET }}

